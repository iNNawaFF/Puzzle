import { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";

const gridSize = 3; // 3x3 grid
const initialTiles = Array.from({ length: gridSize * gridSize }, (_, i) => i);

function shuffleArray(array) {
  let shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
}

export default function PuzzleGame() {
  const [tiles, setTiles] = useState(shuffleArray(initialTiles));

  const swapTiles = (index) => {
    const emptyIndex = tiles.indexOf(0);
    const validMoves = [emptyIndex - 1, emptyIndex + 1, emptyIndex - gridSize, emptyIndex + gridSize];
    
    if (validMoves.includes(index)) {
      let newTiles = [...tiles];
      [newTiles[emptyIndex], newTiles[index]] = [newTiles[index], newTiles[emptyIndex]];
      setTiles(newTiles);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-200">
      <h1 className="text-3xl font-bold mb-6">Ultimate Visual Puzzle</h1>
      <div className="grid grid-cols-3 gap-2 bg-white p-4 rounded-xl shadow-xl">
        {tiles.map((tile, index) => (
          <motion.div
            key={tile}
            onClick={() => swapTiles(index)}
            className={`w-24 h-24 flex items-center justify-center bg-blue-500 text-white text-2xl font-bold cursor-pointer rounded-lg transition-all duration-300 ${tile === 0 ? 'bg-gray-300' : ''}`}
            whileTap={{ scale: 0.9 }}
          >
            {tile !== 0 && tile}
          </motion.div>
        ))}
      </div>
      <Button className="mt-6 bg-green-500 text-white p-4 rounded-xl" onClick={() => setTiles(shuffleArray(initialTiles))}>Shuffle</Button>
    </div>
  );
}
